// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models.Context;

#nullable disable

namespace Models.Migrations
{
    [DbContext(typeof(DogWalkPlusContext))]
    [Migration("20240419173533_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Models.Foto", b =>
                {
                    b.Property<int>("IdFoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_foto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFoto"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion");

                    b.Property<int?>("IdPerro")
                        .HasColumnType("int")
                        .HasColumnName("id_perro");

                    b.Property<string>("UrlFoto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("url_foto");

                    b.HasKey("IdFoto")
                        .HasName("PK__Fotos__620EA3A53500BEB4");

                    b.HasIndex("IdPerro");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("Models.Models.Horario", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_horario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHorario"));

                    b.Property<string>("Disponibilidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("disponibilidad");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_hora");

                    b.HasKey("IdHorario")
                        .HasName("PK__Horario__C5836D6939308B65");

                    b.ToTable("Horario", (string)null);
                });

            modelBuilder.Entity("Models.Models.Opinione", b =>
                {
                    b.Property<int>("IdOpinion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_opinion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOpinion"));

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("comentario");

                    b.Property<int>("IdPaseador")
                        .HasColumnType("int")
                        .HasColumnName("id_paseador");

                    b.Property<int>("IdPerro")
                        .HasColumnType("int")
                        .HasColumnName("id_perro");

                    b.Property<int>("Puntuacion")
                        .HasColumnType("int")
                        .HasColumnName("puntuacion");

                    b.HasKey("IdOpinion")
                        .HasName("PK__Opinione__04DDBD78B95BF317");

                    b.HasIndex("IdPaseador");

                    b.HasIndex("IdPerro");

                    b.ToTable("Opiniones");
                });

            modelBuilder.Entity("Models.Models.Paseador", b =>
                {
                    b.Property<int>("IdPaseador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_paseador");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPaseador"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("Dirección")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("dirección");

                    b.Property<string>("DniPaseador")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("char(9)")
                        .IsFixedLength();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("TelefonoPaseador")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("char(9)")
                        .IsFixedLength();

                    b.HasKey("IdPaseador")
                        .HasName("PK__Paseador__C0836292BE2D876F");

                    b.HasIndex(new[] { "Email" }, "UQ__Paseador__AB6E6164FEA0799A")
                        .IsUnique();

                    b.ToTable("Paseador", (string)null);
                });

            modelBuilder.Entity("Models.Models.Perro", b =>
                {
                    b.Property<int>("IdPerro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_perro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerro"));

                    b.Property<int>("Edad")
                        .HasColumnType("int")
                        .HasColumnName("edad");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Instagram")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("instagram");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("raza");

                    b.Property<string>("Tiktok")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tiktok");

                    b.HasKey("IdPerro")
                        .HasName("PK__Perro__93FAA747011F9CB2");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Perro", (string)null);
                });

            modelBuilder.Entity("Models.Models.Precio", b =>
                {
                    b.Property<int>("IdPaseador")
                        .HasColumnType("int")
                        .HasColumnName("id_paseador");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int")
                        .HasColumnName("id_servicio");

                    b.Property<decimal>("Precio1")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.HasKey("IdPaseador", "IdServicio")
                        .HasName("PK__Precios__167E656FF392DA88");

                    b.HasIndex("IdServicio");

                    b.ToTable("Precios");
                });

            modelBuilder.Entity("Models.Models.Ranking", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<int>("IdPaseador")
                        .HasColumnType("int")
                        .HasColumnName("id_paseador");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("comentario");

                    b.Property<int>("Valoracion")
                        .HasColumnType("int")
                        .HasColumnName("valoracion");

                    b.HasKey("IdUsuario", "IdPaseador")
                        .HasName("PK__Ranking__72363284540DF759");

                    b.HasIndex("IdPaseador");

                    b.ToTable("Ranking", (string)null);
                });

            modelBuilder.Entity("Models.Models.Reserva", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_reserva");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReserva"));

                    b.Property<string>("EstadoReserva")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("estado_reserva");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_reserva");

                    b.Property<int>("IdHorario")
                        .HasColumnType("int")
                        .HasColumnName("id_horario");

                    b.Property<int>("IdPaseador")
                        .HasColumnType("int")
                        .HasColumnName("id_paseador");

                    b.Property<int>("IdPerro")
                        .HasColumnType("int")
                        .HasColumnName("id_perro");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int")
                        .HasColumnName("id_servicio");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.HasKey("IdReserva")
                        .HasName("PK__Reservas__423CBE5D68BD8FFB");

                    b.HasIndex("IdHorario");

                    b.HasIndex("IdPaseador");

                    b.HasIndex("IdPerro");

                    b.HasIndex("IdServicio");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Models.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_servicio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"));

                    b.Property<string>("DescripcionServicio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descripcion_servicio");

                    b.Property<string>("NombreServicio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre_servicio");

                    b.HasKey("IdServicio")
                        .HasName("PK__Servicio__6FD07FDC242612FA");

                    b.ToTable("Servicios");
                });

            modelBuilder.Entity("Models.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("apellido");

                    b.Property<string>("Dirección")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("dirección");

                    b.Property<string>("DniUsuario")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("char(9)")
                        .IsFixedLength();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("TelefonoUsuario")
                        .IsRequired()
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("char(9)")
                        .IsFixedLength();

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__4E3E04ADF1FABD7D");

                    b.HasIndex(new[] { "Email" }, "UQ__Usuario__AB6E61643F74DBF3")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Models.Models.Foto", b =>
                {
                    b.HasOne("Models.Models.Perro", "IdPerroNavigation")
                        .WithMany("Fotos")
                        .HasForeignKey("IdPerro")
                        .HasConstraintName("FK__Fotos__id_perro__6A30C649");

                    b.Navigation("IdPerroNavigation");
                });

            modelBuilder.Entity("Models.Models.Opinione", b =>
                {
                    b.HasOne("Models.Models.Paseador", "IdPaseadorNavigation")
                        .WithMany("Opiniones")
                        .HasForeignKey("IdPaseador")
                        .IsRequired()
                        .HasConstraintName("FK__Opiniones__id_pa__6EF57B66");

                    b.HasOne("Models.Models.Perro", "IdPerroNavigation")
                        .WithMany("Opiniones")
                        .HasForeignKey("IdPerro")
                        .IsRequired()
                        .HasConstraintName("FK__Opiniones__id_pe__6E01572D");

                    b.Navigation("IdPaseadorNavigation");

                    b.Navigation("IdPerroNavigation");
                });

            modelBuilder.Entity("Models.Models.Perro", b =>
                {
                    b.HasOne("Models.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Perros")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Perro__id_usuari__59063A47");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Models.Models.Precio", b =>
                {
                    b.HasOne("Models.Models.Paseador", "IdPaseadorNavigation")
                        .WithMany("Precios")
                        .HasForeignKey("IdPaseador")
                        .IsRequired()
                        .HasConstraintName("FK__Precios__id_pase__5535A963");

                    b.HasOne("Models.Models.Servicio", "IdServicioNavigation")
                        .WithMany("Precios")
                        .HasForeignKey("IdServicio")
                        .IsRequired()
                        .HasConstraintName("FK__Precios__id_serv__5629CD9C");

                    b.Navigation("IdPaseadorNavigation");

                    b.Navigation("IdServicioNavigation");
                });

            modelBuilder.Entity("Models.Models.Ranking", b =>
                {
                    b.HasOne("Models.Models.Paseador", "IdPaseadorNavigation")
                        .WithMany("Rankings")
                        .HasForeignKey("IdPaseador")
                        .IsRequired()
                        .HasConstraintName("FK__Ranking__id_pase__6754599E");

                    b.HasOne("Models.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Rankings")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Ranking__id_usua__66603565");

                    b.Navigation("IdPaseadorNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Models.Models.Reserva", b =>
                {
                    b.HasOne("Models.Models.Horario", "IdHorarioNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdHorario")
                        .IsRequired()
                        .HasConstraintName("FK__Reservas__id_hor__628FA481");

                    b.HasOne("Models.Models.Paseador", "IdPaseadorNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdPaseador")
                        .IsRequired()
                        .HasConstraintName("FK__Reservas__id_pas__5FB337D6");

                    b.HasOne("Models.Models.Perro", "IdPerroNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdPerro")
                        .IsRequired()
                        .HasConstraintName("FK__Reservas__id_per__619B8048");

                    b.HasOne("Models.Models.Servicio", "IdServicioNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdServicio")
                        .IsRequired()
                        .HasConstraintName("FK__Reservas__id_ser__60A75C0F");

                    b.HasOne("Models.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Reservas")
                        .HasForeignKey("IdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK__Reservas__id_usu__5EBF139D");

                    b.Navigation("IdHorarioNavigation");

                    b.Navigation("IdPaseadorNavigation");

                    b.Navigation("IdPerroNavigation");

                    b.Navigation("IdServicioNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Models.Models.Horario", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Models.Models.Paseador", b =>
                {
                    b.Navigation("Opiniones");

                    b.Navigation("Precios");

                    b.Navigation("Rankings");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Models.Models.Perro", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("Opiniones");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Models.Models.Servicio", b =>
                {
                    b.Navigation("Precios");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Models.Models.Usuario", b =>
                {
                    b.Navigation("Perros");

                    b.Navigation("Rankings");

                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
